"""empty message

Revision ID: 0ea7363b5967
Revises: 7c24467f509a
Create Date: 2021-04-24 12:37:41.767398

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0ea7363b5967'
down_revision = '7c24467f509a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('shift_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('start_screenshot', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('end_screenshot', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('start_location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('end_location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('mileage', sa.Float(), nullable=True),
    sa.Column('estimated_mileage', sa.Float(), nullable=True),
    sa.Column('total_pay', sa.Float(), nullable=True),
    sa.Column('tip', sa.Float(), nullable=True),
    sa.Column('employer', sa.Enum('DOORDASH', 'INSTACART', 'SHIPT', 'GRUBHUB', 'UBEREATS', name='employernames'), nullable=True),
    sa.ForeignKeyConstraint(['end_screenshot'], ['screenshots.id'], ),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['start_screenshot'], ['screenshots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('trips')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('trips',
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('date_modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('shift_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('start_screenshot', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('end_screenshot', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('start_location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), autoincrement=False, nullable=True),
    sa.Column('end_location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), autoincrement=False, nullable=True),
    sa.Column('mileage', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_pay', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('tip', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('employer', postgresql.ENUM('DOORDASH', 'INSTACART', 'SHIPT', 'GRUBHUB', 'UBEREATS', name='employernames'), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('estimated_mileage', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['end_screenshot'], ['screenshots.id'], name='trips_end_screenshot_fkey'),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts.id'], name='trips_shift_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['start_screenshot'], ['screenshots.id'], name='trips_start_screenshot_fkey'),
    sa.PrimaryKeyConstraint('id', name='trips_pkey')
    )
    op.drop_table('jobs')
    # ### end Alembic commands ###
