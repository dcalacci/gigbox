kind: Service
apiVersion: v1
metadata:
  name: db
  labels:
      app: gigbox-server
spec:
  ports:
      - port: 5432
  selector:
      app: gigbox-server
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  creationTimestamp: null
  labels:
      app: gigbox-server
  name: database-data-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: database-data 
  labels:
    type: local
spec:
  storageClassName: standard
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app: gigbox-server 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gigbox-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gigbox-server
    spec:
      containers:
        - image: postgis/postgis
          name: db
          env:
            - name: POSTGRES_USER
              valueFrom:
                  configMapKeyRef:
                      name: gigbox-config
                      key: postgres_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                  configMapKeyRef:
                      name: gigbox-config
                      key: postgres_password
            - name: POSTGRES_DB
              valueFrom:
                  configMapKeyRef:
                      name: gigbox-config
                      key: postgres_db
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: database-data
              subPath: postgres
          ports:
            - containerPort: 5432
      restartPolicy: Always
      volumes:
        - name: database-data
          persistentVolumeClaim:
            claimName: database-data-claim
